package BrannonBlair.github.com;

import java.util.ArrayList;
import org.bukkit.*;
import org.bukkit.command.*;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.FileConfigurationOptions;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;

public class WarpGUI extends JavaPlugin
    implements Listener {

    public WarpGUI() {
        prefix = (new StringBuilder()).append(ChatColor.RED).append("[").append(ChatColor.GOLD).append("OverLoad Warps").append(ChatColor.RED).append("] ").toString();
        last = 0;
        theList = getConfig().getString("Warps.List");
        warpList = theList.split(",");
    }

    public void onEnable() {
        Bukkit.getServer().getPluginManager().registerEvents(this, this);
        Bukkit.getConsoleSender().sendMessage((new StringBuilder(String.valueOf(prefix))).append(ChatColor.GREEN).append("Successfully Started!").toString());
        Bukkit.getConsoleSender().sendMessage((new StringBuilder(String.valueOf(prefix))).append(ChatColor.RED).append("This plugin is a work in progress! Please Post Bugs!").toString());
        getConfig().options().copyDefaults(true).copyHeader(true);
        saveDefaultConfig();
    }

    public boolean onCommand(CommandSender sender, Command cmd, String label, String args[]) {
        if(cmd.getName().equalsIgnoreCase("warp"))
            if(sender.hasPermission("warp.gui")) {
                if(sender instanceof Player) {
                    Player player = (Player)sender;
                    if(args.length == 0)
                        try {
                            openGUI(player);
                        }
                        catch(Exception e) {
                            e.printStackTrace();
                        }
                }
            } else {
                sender.sendMessage((new StringBuilder(String.valueOf(prefix))).append(ChatColor.RED).append("You don't have access to this command.").toString());
            }
        return true;
    }

    public void openGUI(Player player)
        throws Exception {
        String noPermissionI = getConfig().getString("No_Permission.item");
        int noPermissionD = Integer.valueOf(getConfig().getInt("No_Permission.damage_value")).intValue();
        String closeIcon = getConfig().getString("Close_Tab.item");
        int closeDamage = Integer.valueOf(getConfig().getInt("Close_Tab.damage_value")).intValue();
        int warpAmount = Integer.valueOf(getConfig().getInt("Warp_Amount")).intValue();
        Inventory inv = null;
        if(warpAmount < 9) {
            inv = Bukkit.createInventory(null, 9, (new StringBuilder()).append(ChatColor.GOLD).append("OverLoad Warps").toString());
            last = 8;
        } else
        if(warpAmount >= 9 && warpAmount < 18) {
            inv = Bukkit.createInventory(null, 18, (new StringBuilder()).append(ChatColor.GOLD).append("OverLoad Warps").toString());
            last = 17;
        } else
        if(warpAmount >= 18 && warpAmount < 27) {
            inv = Bukkit.createInventory(null, 27, (new StringBuilder()).append(ChatColor.GREEN).append("OverLoad Warps").toString());
            last = 26;
        } else
        if(warpAmount >= 27 && warpAmount < 36) {
            inv = Bukkit.createInventory(null, 36, (new StringBuilder()).append(ChatColor.GREEN).append("OverLoad Warps").toString());
            last = 35;
        } else
        if(warpAmount >= 36 && warpAmount < 45) {
            inv = Bukkit.createInventory(null, 45, (new StringBuilder()).append(ChatColor.GREEN).append("OverLoad Warps").toString());
            last = 44;
        } else
        if(warpAmount >= 45 && warpAmount < 54) {
            inv = Bukkit.createInventory(null, 54, (new StringBuilder()).append(ChatColor.GREEN).append("OverLoad Warps").toString());
            last = 53;
        }
        for(int i = 0; i < warpList.length; i++) {
            String warp1 = warpList[i];
            String warpname = warp1.toString();
            String permission = (new StringBuilder("essentials.warps.")).append(warpname).toString();
            String kitItem = getConfig().getString((new StringBuilder(String.valueOf(warpname))).append(".item").toString());
            int kitDamage = Integer.valueOf(getConfig().getInt((new StringBuilder(String.valueOf(warpname))).append(".damage_value").toString())).intValue();
            int loreAmount = Integer.valueOf(getConfig().getInt((new StringBuilder(String.valueOf(warpname))).append(".Lore_Amount").toString())).intValue();
            String warpColorU = getConfig().getString((new StringBuilder(String.valueOf(warpname))).append(".Warp_Name_Color").toString());
            String warpColorL = getConfig().getString((new StringBuilder(String.valueOf(warpname))).append(".Locked_Name_Color").toString());
            ItemStack kit = new ItemStack(Material.getMaterial(kitItem), 1, (short)kitDamage);
            ItemMeta kitmeta = kit.getItemMeta();
            kitmeta.setDisplayName(ChatColor.translateAlternateColorCodes('&', (new StringBuilder("&r")).append(warpColorU).append(warpname).toString()));
            ArrayList Lore45 = new ArrayList();
            Lore45.add((new StringBuilder()).append(ChatColor.GRAY).append("----------").append(ChatColor.GREEN).append("Unlocked").append(ChatColor.GRAY).append("----------").toString());
            for(int z = 1; z <= loreAmount; z++) {
                String Lore = getConfig().getString((new StringBuilder(String.valueOf(warpname))).append(".Lore_").append(z).toString());
                Lore45.add(ChatColor.translateAlternateColorCodes('&', Lore));
            }

            Lore45.add((new StringBuilder()).append(ChatColor.GRAY).append("----------------------------").toString());
            kitmeta.setLore(Lore45);
            kit.setItemMeta(kitmeta);
            ItemStack noAccess = new ItemStack(Material.getMaterial(noPermissionI), 1, (short)noPermissionD);
            ItemMeta nometa = noAccess.getItemMeta();
            nometa.setDisplayName(ChatColor.translateAlternateColorCodes('&', (new StringBuilder("&r")).append(warpColorL).append(warpname).toString()));
            ArrayList Lore55 = new ArrayList();
            Lore55.add((new StringBuilder()).append(ChatColor.GRAY).append("-----------").append(ChatColor.RED).append("Locked").append(ChatColor.GRAY).append("-----------").toString());
            for(int z = 1; z <= loreAmount; z++) {
                String Lore = getConfig().getString((new StringBuilder(String.valueOf(warpname))).append(".Lore_").append(z).toString());
                Lore55.add(ChatColor.translateAlternateColorCodes('&', Lore));
            }

            Lore55.add((new StringBuilder()).append(ChatColor.GRAY).append("----------------------------").toString());
            nometa.setLore(Lore55);
            noAccess.setItemMeta(nometa);
            if(player.hasPermission(permission))
                inv.setItem(i, kit);
            else
                inv.setItem(i, noAccess);
        }

        ItemStack close = new ItemStack(Material.getMaterial(closeIcon), 1, (short)closeDamage);
        ItemMeta closemeta = close.getItemMeta();
        closemeta.setDisplayName((new StringBuilder()).append(ChatColor.DARK_RED).append("Exit Warps!").toString());
        ArrayList Lore4 = new ArrayList();
        closemeta.setLore(Lore4);
        close.setItemMeta(closemeta);
        inv.setItem(last, close);
        player.getPlayer().openInventory(inv);
    }

    public void onClick(InventoryClickEvent e)
        throws Exception {
        Player p = (Player)e.getWhoClicked();
        if(e.getInventory().getTitle().equals((new StringBuilder()).append(ChatColor.GREEN).append("WarpGUI").toString())) {
            e.setCancelled(true);
            if(e.getCurrentItem() != null && e.getCurrentItem().getType() != null && e.getCurrentItem().hasItemMeta() && e.getCurrentItem().getItemMeta().hasDisplayName()) {
                String name = ChatColor.stripColor(e.getCurrentItem().getItemMeta().getDisplayName().trim());
                if(e.getSlot() == last)
                    p.closeInventory();
                else
                if(e.isLeftClick()) {
                    String permission = (new StringBuilder("essentials.warps.")).append(name).toString();
                    if(p.hasPermission(permission)) {
                        e.setCancelled(true);
                        p.closeInventory();
                        p.performCommand((new StringBuilder("ewarp ")).append(name).toString());
                    } else {
                        p.sendMessage((new StringBuilder(String.valueOf(prefix))).append(ChatColor.RED).append("You do not have permission to use this warp!").toString());
                        e.setCancelled(true);
                        p.closeInventory();
                    }
                }
            }
        }
    }

    String prefix;
    int last;
    String theList;
    String warpList[];
}
